{{- if not .Values.invitationCode }}
****************************************
Please change the invitation code `invitationCode` in the values.yml, and anything else you may have missed.
****************************************
{{- end }}
{{- if not .Values.secret_token }}
****************************************
Please change the secret token `secret_token` in the values.yml, and anything else you may have missed.
****************************************
{{- end }}
{{- if eq .Values.smtp.password "somepassword" }}
****************************************
Please change the SMTP settings for your email server. Without a correct setting for huginn email won't work, with will cause multiple features to work incorrectly.
****************************************
{{- end }}
{{- if and .Values.oauth.twitter.enabled (eq .Values.oauth.twitter.key "") }}
****************************************
If you are planning on using the Twitter API or OAuth, please fill out the `oauth.twitter` lines. Otherwise you can ignore this message.
****************************************
{{- end }}
{{- if and .Values.oauth.github.enabled (eq .Values.oauth.github.key "") }}
****************************************
If you are planning on using the GitHub API or OAuth, please fill out the `oauth.github` lines. Otherwise you can ignore this message.
****************************************
{{- end }}
{{- if and .Values.oauth.thirty_seven_signals.enabled (eq .Values.oauth.thirty_seven_signals.key "") }}
****************************************
If you are planning on using the Thirty Seven Signals API or OAuth, please fill out the `oauth.thirty_seven_signals` lines. Otherwise you can ignore this message.
****************************************
{{- end }}
{{- if and .Values.oauth.tumblr.enabled (eq .Values.oauth.tumblr.key "") }}
****************************************
If you are planning on using the Tumblr API or OAuth, please fill out the `oauth.tumblr` lines. Otherwise you can ignore this message.
****************************************
{{- end }}
{{- if and .Values.oauth.dropbox.enabled (eq .Values.oauth.dropbox.key "") }}
****************************************
If you are planning on using the Dropbox API or OAuth, please fill out the `oauth.dropbox` lines. Otherwise you can ignore this message.
****************************************
{{- end }}
{{- if and .Values.oauth.wunderlist.enabled (eq .Values.oauth.wunderlist.key "") }}
****************************************
If you are planning on using the Wunderlist API or OAuth, please fill out the `oauth.wunderlist` lines. Otherwise you can ignore this message.
****************************************
{{- end }}
{{- if and .Values.oauth.evernote.enabled (eq .Values.oauth.evernote.key "") }}
****************************************
If you are planning on using the Evernote API or OAuth, please fill out the `oauth.evernote` lines. Otherwise you can ignore this message.
****************************************
{{- end }}
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "huginn.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "huginn.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "huginn.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "huginn.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
{{- end }}
